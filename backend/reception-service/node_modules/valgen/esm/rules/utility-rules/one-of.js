import { validator } from '../../core/index.js';
/**
 *
 */
export function oneOf(rules) {
    const l = rules.length;
    return validator('union', (input, context, _this) => {
        let i;
        let c;
        let discriminator;
        let v;
        let passed = false;
        // Mock fail method to prevent errors
        context.fail = () => (passed = false);
        for (i = 0; i < l; i++) {
            passed = true;
            if (Array.isArray(rules[i])) {
                c = rules[i][0];
                discriminator = rules[i][1];
                if (!(input &&
                    typeof input === 'object' &&
                    typeof discriminator === 'object')) {
                    continue;
                }
                try {
                    for (const k of Object.keys(discriminator)) {
                        discriminator[k](input[k], context);
                        if (!passed)
                            break;
                    }
                    if (!passed)
                        continue;
                }
                catch {
                    continue;
                }
            }
            else
                c = rules[i];
            if (passed)
                try {
                    v = c(input, context);
                    if (passed)
                        break;
                }
                catch {
                    //
                }
        }
        // Restore fail method
        delete context.fail;
        if (passed)
            return v;
        context.fail(_this, `Value didn't match one of required rules`, input);
    });
}
