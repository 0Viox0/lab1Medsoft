import { type ValidationOptions } from '../../core/index.js';
/**
 * Validates if value is "null".
 * @validator isNull
 */
export declare function isNull(options?: ValidationOptions): import("../../core/validator.js").Validator<null, unknown, import("../../core/types.js").ExecutionOptions>;
/**
 * Validates if value is not "null".
 * @validator isNotNull
 */
export declare function isNotNull(options?: ValidationOptions): import("../../core/validator.js").Validator<unknown, unknown, import("../../core/types.js").ExecutionOptions>;
/**
 * Validates if value is "null" or "undefined".
 * @validator isNullish
 */
export declare function isNullish(options?: ValidationOptions): import("../../core/validator.js").Validator<null, unknown, import("../../core/types.js").ExecutionOptions>;
/**
 * Validates if value is not "null" nor "undefined".
 * @validator isNotNullish
 */
export declare function isNotNullish(options?: ValidationOptions): import("../../core/validator.js").Validator<unknown, unknown, import("../../core/types.js").ExecutionOptions>;
