"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.isRecord = isRecord;
const index_js_1 = require("../../core/index.js");
/**
 * Validates record object according to given "key" and "value" rules
 * Converts properties according to rules if coerce option is set to 'true'.
 * @validator isRecord
 */
function isRecord(keyRule, valueRule, options) {
    return (0, index_js_1.validator)('isRecord', (input, context, _this) => {
        if (!(input && typeof input === 'object')) {
            context.fail(_this, `Value must be an object`, input);
            return;
        }
        const keyContext = context.extend();
        const valueContext = context.extend();
        const location = context.location || '';
        const keys = Object.keys(input);
        const l = keys.length;
        let i;
        let k;
        let v;
        const out = {};
        for (i = 0; i < l; i++) {
            k = keys[i];
            v = input[k];
            // Validate key
            k = keyRule(k, {
                onFail(issue) {
                    return `${k} is not a valid key. ` + issue.message;
                },
            }, keyContext);
            // Validate value
            valueContext.property = k;
            valueContext.location = location + (location ? '.' : '') + k;
            v = valueRule(v, valueContext);
            out[k] = v;
        }
        return context.errors.length ? undefined : out;
    }, options);
}
