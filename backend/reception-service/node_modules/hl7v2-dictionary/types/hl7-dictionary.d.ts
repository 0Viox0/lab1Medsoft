import { DeeperPartial } from 'ts-gems';
import { HL7DataTypeDefinition, HL7MessageDefinition, HL7SegmentDefinition } from './types.js';
import { HL7Version } from './version.enum.js';
export declare class HL7Dictionary {
    version: HL7Version;
    segments: Record<string, HL7SegmentDefinition>;
    types: Record<string, HL7DataTypeDefinition>;
    messages: Record<string, HL7MessageDefinition>;
    constructor(args: {
        version?: HL7Version;
        segments?: Record<string, HL7SegmentDefinition>;
        types?: Record<string, HL7DataTypeDefinition>;
        messages?: Record<string, HL7MessageDefinition>;
    });
    extend(args: {
        version?: HL7Version;
        segments?: Record<string, DeeperPartial<HL7SegmentDefinition>>;
        types?: Record<string, DeeperPartial<HL7DataTypeDefinition>>;
        messages?: Record<string, HL7MessageDefinition>;
    }): HL7Dictionary;
    overwriteSegments(segmentsDefs: Record<string, DeeperPartial<HL7SegmentDefinition>>): void;
    overwriteTypes(typeDefs: Record<string, DeeperPartial<HL7DataTypeDefinition>>): void;
}
