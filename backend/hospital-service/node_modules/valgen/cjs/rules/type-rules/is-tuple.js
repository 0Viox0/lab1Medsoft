"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.isTuple = isTuple;
const index_js_1 = require("../../core/index.js");
function isTuple(items, options) {
    return (0, index_js_1.validator)('isTuple', (input, context, _this) => {
        const coerce = options?.coerce ?? context.coerce;
        let output = input;
        if (output != null && coerce && !Array.isArray(output))
            output = [output];
        if (!Array.isArray(input)) {
            context.fail(_this, `Value must be a tuple`, input);
            return;
        }
        const location = context.location || '';
        let itemRule;
        let i;
        let v;
        const l = output.length;
        const out = [];
        const nl = items.length;
        const itemContext = context.extend();
        for (i = 0; i < l && i < nl; i++) {
            itemRule = items[i];
            itemContext.scope = output;
            itemContext.label = context.label
                ? context.label + `[${i}]`
                : undefined;
            itemContext.index = i;
            itemContext.location = location + '[' + i + ']';
            itemContext.label =
                (itemContext.label || itemContext.property || 'Value at ') + `[${i}]`;
            v = itemRule(output[i], itemContext);
            out.push(v);
        }
        return context.errors.length ? undefined : out;
    }, options);
}
