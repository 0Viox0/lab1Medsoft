import { isValidator, validator } from './validator.js';
/**
 * Forwards codec process to a sub codec. Useful for circular checks
 * @validator forwardRef
 */
export function forwardRef(fn) {
    return validator('forwardRef', (input, context) => {
        const nested = fn(context);
        return nested(input, context);
    });
}
export function iif(check, _then, _else) {
    return validator('iif', (input, context) => {
        let c = _else;
        try {
            if (check(input) !== undefined)
                c = _then;
        }
        catch {
            // ignored
        }
        if (isValidator(c))
            return c(input, context);
        return c;
    });
}
